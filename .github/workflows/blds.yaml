name: blds

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  ocis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # - name: Space
      #   run: |
      #     echo "Listing 100 largest packages"
      #     dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
      #     df -h
      #     echo "Removing large packages"
      #     sudo apt-get remove -y '^dotnet-.*'
      #     sudo apt-get remove -y '^llvm-.*'
      #     sudo apt-get remove -y 'php.*'
      #     sudo apt-get remove -y '^mongodb-.*'
      #     sudo apt-get remove -y '^mysql-.*'
      #     sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel libgl1-mesa-dri
      #     sudo apt-get autoremove -y
      #     sudo apt-get clean
      #     df -h
      #     echo "Removing large directories"
      #     # deleting 15GB
      #     rm -rf /usr/share/dotnet/
      #     sudo rm -rf /usr/share/dotnet
      #     sudo rm -rf /opt/ghc
      #     sudo rm -rf "/usr/local/share/boost"
      #     sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      #     df -h
      - 
        name: Checkout
        uses: actions/checkout@v4
      -
        name: GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      -
        name: Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SZIP_VERSION=${{ env.SZIP_VERSION }}
            HDF5_VERSION=${{ env.HDF5_VERSION }}
            NETCDFC_VERSION=${{ env.NETCDFC_VERSION }}
            NETCDFCXX_VERSION=${{ env.NETCDFCXX_VERSION }}
            NETCDFFORTRAN_VERSION=${{ env.NETCDFFORTRAN_VERSION }}
            PNETCDF_VERSION=${{ env.PNETCDF_VERSION }}
        env:
          SZIP_VERSION: "2.1.1"
          HDF5_VERSION: "1.10.6"
          NETCDFC_VERSION: "4.7.3"
          NETCDFCXX_VERSION: "4.3.1"
          NETCDFFORTRAN_VERSION: "4.4.4"
          PNETCDF_VERSION: "1.12.1"
